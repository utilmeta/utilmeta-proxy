# Generated by Django 4.2.16 on 2024-12-02 10:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=60, unique=True)),
                ("node_id", models.CharField(default=None, max_length=50, null=True)),
                ("base_url", models.TextField(default=None, null=True)),
                ("ops_api", models.TextField(default=None, null=True)),
                ("routes", models.JSONField(default=None, null=True)),
                ("public", models.BooleanField(default=False)),
                ("created_time", models.DateTimeField(auto_now_add=True)),
                ("data", models.JSONField(default=dict)),
            ],
            options={
                "db_table": "utilmeta_service",
            },
        ),
        migrations.CreateModel(
            name="ServiceNameRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=60, unique=True)),
                ("created_time", models.DateTimeField(auto_now_add=True)),
                ("deprecated_time", models.DateTimeField(default=None, null=True)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="name_records",
                        to="service.service",
                    ),
                ),
            ],
            options={
                "db_table": "utilmeta_service_name_record",
            },
        ),
        migrations.CreateModel(
            name="Instance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("host", models.GenericIPAddressField()),
                ("port", models.PositiveIntegerField(default=None, null=True)),
                ("address", models.CharField(max_length=255, unique=True)),
                ("base_url", models.TextField()),
                ("ops_api", models.TextField()),
                ("resource_id", models.CharField(max_length=50, unique=True)),
                ("server_id", models.CharField(max_length=50, null=True)),
                ("remote_id", models.CharField(max_length=50, null=True)),
                (
                    "cwd",
                    models.FilePathField(
                        allow_files=False, allow_folders=True, default=None, null=True
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(decimal_places=2, default=1, max_digits=5),
                ),
                ("connected", models.BooleanField(default=True)),
                ("public", models.BooleanField(default=False)),
                ("version", models.CharField(max_length=32)),
                ("version_major", models.PositiveIntegerField(default=0)),
                ("version_minor", models.PositiveIntegerField(default=0)),
                ("version_patch", models.PositiveIntegerField(default=0)),
                ("asynchronous", models.BooleanField(default=False)),
                ("production", models.BooleanField(default=False)),
                ("language", models.CharField(max_length=40)),
                (
                    "language_version",
                    models.CharField(default=None, max_length=40, null=True),
                ),
                ("utilmeta_version", models.CharField(max_length=40)),
                ("backend", models.CharField(max_length=40)),
                (
                    "backend_version",
                    models.CharField(default=None, max_length=40, null=True),
                ),
                ("created_time", models.DateTimeField(auto_now_add=True)),
                ("deprecated", models.BooleanField(default=False)),
                ("resources", models.JSONField(default=None, null=True)),
                ("resources_etag", models.JSONField(default=None, null=True)),
                ("data", models.JSONField(default=dict)),
                (
                    "avg_load",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "avg_time",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "avg_rps",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instances",
                        to="service.service",
                    ),
                ),
            ],
            options={
                "db_table": "utilmeta_instance",
            },
        ),
    ]
